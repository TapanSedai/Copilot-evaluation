package error_handling;

public class ErrorHandler {

    // In this file, we will be looking at the following errors:
    // 1. Missing semicolon
    // 2. Accessing null reference
    // 3. Missing return statement
    // 4. Misspelt variable

    // The following methods are examples of the above errors.
    // Uncomment them one by one to see the errors.
    // Below each error the copilot is likely to suggest a fix. -> completely generated by copilot


    public void funcWithoutSemicolon() {
        //System.out.println("Hello World")

        // handle missing semicolon (1st iteration)
        System.out.println("Hello World");
    }

    public void accessNullReference(){
        // String str = null;
        // str.length();

        // handle null check (1st iteration) -> failed to handle null check
        String str = null;
        str.length();

        // handle null check (2nd iteration) -> handle null check
    
        str = str == null ? "" : str.length() + "";

    }

    public void missingReturnStatement(){
        /* 
        int a = 1;
        if (a == 1) {
            return;
        }
        */


        // handle missing return statement (1st iteration)
        int a = 1;
        if (a == 1) {
            return;
        }
        else {
            return;
        }

        // handle missing return statement (2nd iteration)
        a = 1;
        if (a == 1) {
            return;
        }
        return;
    }

    public void misspeltVariable(){
        // int a = 1;
        // int b = 2;
        // int c = a + b;
        // int d = c + e;

        // handle misspelt variable (first iteration)
        int a = 1;
        int b = 2;
        int c = a + b;
        int d = c + a;
    }

    public void exceptionNotHandled(){
        // try {
        //     int a = 1;
        //     int b = 0;
        //     int c = a / b;
        // } 
        
        // handle the exception for the above case (first iteration)
        try {
            int a = 1;
            int b = 0;
            int c = a / b;
        } catch (Exception e) {
            System.out.println("Exception caught");
        }
        
    }

    public void infinteLoopGenerated(){
        
        for(int i = 0; i < 10; i*=2){
            System.out.println("Hello World");
        }

        // handle infinite loop (first iteration)
        for(int i = 0; i < 10; i*=2){
            System.out.println("Hello World");
            break;
        }

        // handle infinite loop (second iteration)
        for(int i = 0; i < 10; i*=2){
            System.out.println("Hello World");
            return;
        }

        // handle infinite loop (third iteration)
        for(int i = 0; i < 10; i*=2){
            System.out.println("Hello World");
            continue;
        }

        // handle infinite loop (fourth iteration)
        for(int i = 0; i < 10; i*=2){
            System.out.println("Hello World");
            break;
        }

        // manual intervention by specifying correct logic in comments

        // logical mistake fix (instead of multiplication, use addition)
        for(int i = 0; i < 10; i++){
            System.out.println("Hello World");
        }

        // logical mistake fix (instead of zero in initializer, use one)
        for(int i = 1; i < 10; i*=2){
            System.out.println("Hello World");
        }
    }
    
}
